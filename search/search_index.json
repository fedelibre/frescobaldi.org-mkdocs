{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"about/","text":"About Frescobaldi Frescobaldi is named after Girolamo Frescobaldi (1583-1643) , an Italian organist and composer. History of Frescobaldi Frescobaldi has its roots in LilyKDE, which was a plugin for KDE3's editor Kate. LilyKDE was written in Python and released in 2007 on Christmas. When KDE developed version 4, it was not immediately possible to make Kate plugins in Python. So LilyKDE became a standalone application, wrapping the Kate texteditor part, and was renamed to Frescobaldi. It still used the Okular KDE part to display PDF documents. Frescobaldi 0.7 was the first public release, on Christmas 2008. On Christmas 2009 version 1.0.0 was released and on Christmas 2010 version 1.2.0. At that time it was decided to move away from the KDE4 libraries and just use Python and Qt4 which are easily available on all major computing platforms. Frescobaldi 2.0 is a complete rewrite from scratch, and was released at Christmas 2011. Frescobaldi 2 had many releases from 2011 to 2017, where lots of functionality was added and many improvements were made. During these years, more developers joined initial author and core developer Wilbert Berendsen to work on Frescobaldi. A great effort was done to port Frescobaldi to Python3 and Qt5, which brought more stability and durability, and better multilingual support. As a result, Frescobaldi 3 was released in Feburary 2017. In 2017, Frescobaldi was accepted in the Google Summer Of Code project, where a number of students contributed significantly. In 2019, Frescobaldi and some supporting libraries were moved to the frescobaldi organisation on GitHub, reflecting that Frescobaldi now really is a community-supported Free Software project.","title":"About Frescobaldi"},{"location":"about/#about-frescobaldi","text":"Frescobaldi is named after Girolamo Frescobaldi (1583-1643) , an Italian organist and composer.","title":"About Frescobaldi"},{"location":"about/#history-of-frescobaldi","text":"Frescobaldi has its roots in LilyKDE, which was a plugin for KDE3's editor Kate. LilyKDE was written in Python and released in 2007 on Christmas. When KDE developed version 4, it was not immediately possible to make Kate plugins in Python. So LilyKDE became a standalone application, wrapping the Kate texteditor part, and was renamed to Frescobaldi. It still used the Okular KDE part to display PDF documents. Frescobaldi 0.7 was the first public release, on Christmas 2008. On Christmas 2009 version 1.0.0 was released and on Christmas 2010 version 1.2.0. At that time it was decided to move away from the KDE4 libraries and just use Python and Qt4 which are easily available on all major computing platforms. Frescobaldi 2.0 is a complete rewrite from scratch, and was released at Christmas 2011. Frescobaldi 2 had many releases from 2011 to 2017, where lots of functionality was added and many improvements were made. During these years, more developers joined initial author and core developer Wilbert Berendsen to work on Frescobaldi. A great effort was done to port Frescobaldi to Python3 and Qt5, which brought more stability and durability, and better multilingual support. As a result, Frescobaldi 3 was released in Feburary 2017. In 2017, Frescobaldi was accepted in the Google Summer Of Code project, where a number of students contributed significantly. In 2019, Frescobaldi and some supporting libraries were moved to the frescobaldi organisation on GitHub, reflecting that Frescobaldi now really is a community-supported Free Software project.","title":"History of Frescobaldi"},{"location":"about/releases/","text":"Releases Changes in current master Requirement changes: Frescobaldi now requires Python3.3+ New features: New \"Document Fonts\" dialog supporting text and music fonts and providing a font sample previewer Possibility to load external extensions New \"First System Only\" option in Custom Engrave Goto Line command (#927, feature request #676) Rename file command (#1057, feature request #980) Bug fixes: fixed #895 seeking in MIDI player during playing stops sound fixed #768, now paper orientation is properly handled in New Score Wizard fixed #705, discrepancy of LilyPond vs. system version of GhostScript on Linux (#926) fixed #1094, includepaths on Windows (#1095) fixed #1121, NameError: name 'widgets' is not defined Improvements: Smarter behaviour of the autocompletion popup (#918, #922) New command File->Rename/Move... (#980) Sessions can be grouped in the Sessions menu Show absolute path of include files in tooltip (#941) Restructure Tools Menu (#1080) File Open toolbar button shows recent files menu on long click Internals: Multithreaded Job Queue preparing multicore support (#1103) Rewrite code handling external processes/jobs (#1100) Changes in 3.0.0 -- 2017/02/17 Requirement changes: Frescobaldi now requires Python3.2+, Qt5, PyQt5, python-poppler-qt5 New features: Zoom with pinch gesture in Music View, contributed by David Rydh An option (enabled by default) to move the cursor to the end of the line when PageDown is pressed on the last line, and to move the cursor to the start of the first line if PageUp is pressed on the first line Improvements: Retina display support in Music View, contributed by David Rydh","title":"Releases"},{"location":"about/releases/#releases","text":"","title":"Releases"},{"location":"about/releases/#changes-in-current-master","text":"Requirement changes: Frescobaldi now requires Python3.3+ New features: New \"Document Fonts\" dialog supporting text and music fonts and providing a font sample previewer Possibility to load external extensions New \"First System Only\" option in Custom Engrave Goto Line command (#927, feature request #676) Rename file command (#1057, feature request #980) Bug fixes: fixed #895 seeking in MIDI player during playing stops sound fixed #768, now paper orientation is properly handled in New Score Wizard fixed #705, discrepancy of LilyPond vs. system version of GhostScript on Linux (#926) fixed #1094, includepaths on Windows (#1095) fixed #1121, NameError: name 'widgets' is not defined Improvements: Smarter behaviour of the autocompletion popup (#918, #922) New command File->Rename/Move... (#980) Sessions can be grouped in the Sessions menu Show absolute path of include files in tooltip (#941) Restructure Tools Menu (#1080) File Open toolbar button shows recent files menu on long click Internals: Multithreaded Job Queue preparing multicore support (#1103) Rewrite code handling external processes/jobs (#1100)","title":"Changes in current master"},{"location":"about/releases/#changes-in-300-20170217","text":"Requirement changes: Frescobaldi now requires Python3.2+, Qt5, PyQt5, python-poppler-qt5 New features: Zoom with pinch gesture in Music View, contributed by David Rydh An option (enabled by default) to move the cursor to the end of the line when PageDown is pressed on the last line, and to move the cursor to the start of the first line if PageUp is pressed on the first line Improvements: Retina display support in Music View, contributed by David Rydh","title":"Changes in 3.0.0 -- 2017/02/17"},{"location":"get-started/","text":"First steps The default screen of Frescobaldi shows a text document on the left and an empty Music View window on the right. Now, in the text view, enter some LilyPond code, like this: \\relative c'' { \\time 7/4 c2 bes4 a2 g a bes4 a( g) f2 } \\addlyrics { Join us now and share the soft -- ware! } Then click the Lily toolbar button or press {key_engrave}. LilyPond will start to processes your file and the PDF will be displayed in the Music View on the right. If LilyPond encounters any errors or warnings they will be displayed in the LilyPond Log at the bottom of the screen. The Music View has many possibilities: Hovering over notes and other music objects will highlight them in the text on the left window; clicking on them will place a cursor to the left of the object also in the left window. Use the Ctrl key and your mouse wheel to zoom in and out. Zooming will center around the mouse pointer. Ctrl-left-click-and-hold the mouse to magnify a small section of the Music View without zooming in the whole view. Selecting text in the main text window will highlight corresponding notes in the Music View; press {key_jump} to explicitly center and highlight a note or other objects in the Music View. Shift-drag a selection and then press {key_copy_image} or {menu_copy_image} to copy the selected music as a raster image to the clipboard, a file or another application. When your music score is complete, run LilyPond once more but with clickable notes turned off: menu {menu_engrave}. This significantly reduces the size of the PDF. If LilyPond does not start at all, check if you have installed LilyPond correctly and that the lilypond command is in your system's PATH environment variable. If needed, provide the exact path to your LilyPond executable under {menu_preferences_lilypond}. If LilyPond encounters any warnings or errors in your document they will show up in the LilyPond Log window at the bottom of the screen. Frescobaldi will then highlight these lines in the text view where the errors are. Clicking the error in the Log Window or pressing {key_error} immediately brings the text cursor to the offending line in your text view. Pressing {key_error} again will move to the next error message, and so on. LilyPond will remove any previous error line highlights the next time it is run but you can also remove any error line markings manually with the option {menu_clear_error_marks}.","title":"First steps"},{"location":"get-started/#first-steps","text":"The default screen of Frescobaldi shows a text document on the left and an empty Music View window on the right. Now, in the text view, enter some LilyPond code, like this: \\relative c'' { \\time 7/4 c2 bes4 a2 g a bes4 a( g) f2 } \\addlyrics { Join us now and share the soft -- ware! } Then click the Lily toolbar button or press {key_engrave}. LilyPond will start to processes your file and the PDF will be displayed in the Music View on the right. If LilyPond encounters any errors or warnings they will be displayed in the LilyPond Log at the bottom of the screen. The Music View has many possibilities: Hovering over notes and other music objects will highlight them in the text on the left window; clicking on them will place a cursor to the left of the object also in the left window. Use the Ctrl key and your mouse wheel to zoom in and out. Zooming will center around the mouse pointer. Ctrl-left-click-and-hold the mouse to magnify a small section of the Music View without zooming in the whole view. Selecting text in the main text window will highlight corresponding notes in the Music View; press {key_jump} to explicitly center and highlight a note or other objects in the Music View. Shift-drag a selection and then press {key_copy_image} or {menu_copy_image} to copy the selected music as a raster image to the clipboard, a file or another application. When your music score is complete, run LilyPond once more but with clickable notes turned off: menu {menu_engrave}. This significantly reduces the size of the PDF. If LilyPond does not start at all, check if you have installed LilyPond correctly and that the lilypond command is in your system's PATH environment variable. If needed, provide the exact path to your LilyPond executable under {menu_preferences_lilypond}. If LilyPond encounters any warnings or errors in your document they will show up in the LilyPond Log window at the bottom of the screen. Frescobaldi will then highlight these lines in the text view where the errors are. Clicking the error in the Log Window or pressing {key_error} immediately brings the text cursor to the offending line in your text view. Pressing {key_error} again will move to the next error message, and so on. LilyPond will remove any previous error line highlights the next time it is run but you can also remove any error line markings manually with the option {menu_clear_error_marks}.","title":"First steps"}]}